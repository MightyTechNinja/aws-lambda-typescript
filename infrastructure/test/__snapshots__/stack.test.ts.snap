// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24ArtifactHashBA91B77F": Object {
      "Description": "Artifact hash for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5": Object {
      "Description": "S3 bucket for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861": Object {
      "Description": "S3 key for asset version \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParametersd0944e21e184217e2d6482710cb45d19138dae8a5b180daa1f393b4c93fcba9bArtifactHash253D8443": Object {
      "Description": "Artifact hash for asset \\"d0944e21e184217e2d6482710cb45d19138dae8a5b180daa1f393b4c93fcba9b\\"",
      "Type": "String",
    },
    "AssetParametersd0944e21e184217e2d6482710cb45d19138dae8a5b180daa1f393b4c93fcba9bS3Bucket3E5879CC": Object {
      "Description": "S3 bucket for asset \\"d0944e21e184217e2d6482710cb45d19138dae8a5b180daa1f393b4c93fcba9b\\"",
      "Type": "String",
    },
    "AssetParametersd0944e21e184217e2d6482710cb45d19138dae8a5b180daa1f393b4c93fcba9bS3VersionKey5453BC0D": Object {
      "Description": "S3 key for asset version \\"d0944e21e184217e2d6482710cb45d19138dae8a5b180daa1f393b4c93fcba9b\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MyBucketId0DF3D9D1": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketName": "some-artifact-bucket",
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "MyLambdaFunctionIdCFC446EE": Object {
      "DependsOn": Array [
        "MyLambdaFunctionIdServiceRoleDefaultPolicy1AE91785",
        "MyLambdaFunctionIdServiceRoleEB0A0A8E",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersd0944e21e184217e2d6482710cb45d19138dae8a5b180daa1f393b4c93fcba9bS3Bucket3E5879CC",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersd0944e21e184217e2d6482710cb45d19138dae8a5b180daa1f393b4c93fcba9bS3VersionKey5453BC0D",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersd0944e21e184217e2d6482710cb45d19138dae8a5b180daa1f393b4c93fcba9bS3VersionKey5453BC0D",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "Some description of my lambda function",
        "Environment": Object {
          "Variables": Object {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "FunctionName": "MyLambdaFunction",
        "Handler": "lambda.handler",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "MyLambdaFunctionIdServiceRoleEB0A0A8E",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "MyLambdaFunctionIdLogRetention7D31BCFE": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "MyLambdaFunctionIdCFC446EE",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "MyLambdaFunctionIdServiceRoleDefaultPolicy1AE91785": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "MyBucketId0DF3D9D1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "MyBucketId0DF3D9D1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:DeleteObject*",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "MyBucketId0DF3D9D1",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MyLambdaFunctionIdServiceRoleDefaultPolicy1AE91785",
        "Roles": Array [
          Object {
            "Ref": "MyLambdaFunctionIdServiceRoleEB0A0A8E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MyLambdaFunctionIdServiceRoleEB0A0A8E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MyScheduleId76527E0A": Object {
      "Properties": Object {
        "Description": "Triggers my lambda function on some schedule",
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "MyLambdaFunctionIdCFC446EE",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "MyScheduleIdAllowEventRuleMyTestStackMyLambdaFunctionId7C32FF41195E6D0D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "MyLambdaFunctionIdCFC446EE",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "MyScheduleId76527E0A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;
